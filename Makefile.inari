SHELL := /usr/bin/env zsh

.DEFAULT_GOAL := help
.PHONY: help
help:
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

init: ## create server
	@read -q "?Are you sure? [y/N] "
	hcloud server create \
			--location nbg1 \
			--image ubuntu-22.04 \
			--type cpx11 \
			--ssh-key paolo@kitsune \
			--firewall inari-firewall \
			--primary-ipv4 inari-ipv4 \
			--name inari
	nix run github:nix-community/nixos-anywhere -- \
			--build-on-remote \
			--flake .#inari \
			root@$$(hcloud server ip inari)
	ssh-keygen -R $$(hcloud server ip inari)

snix: ## rebuild nixos
	nixos-rebuild switch \
			--flake .#inari \
			--build-host root@$$(hcloud server ip inari) \
			--target-host root@$$(hcloud server ip inari)

slow: ## scale down to a cx21 (2vCPU, 4GB RAM)
	@read -q "?Are you sure? [y/N] "
	hcloud server shutdown inari
	hcloud server change-type --keep-disk inari cx21
	hcloud server poweron inari

fast: ## scale up to a cpx51 (16vCPU, 32GB RAM)
	@read -q "?Are you sure? [y/N] "
	hcloud server shutdown inari
	hcloud server change-type --keep-disk inari cpx51
	hcloud server poweron inari

kill: ## delete server
	@read -q "?Are you sure? [y/N] "
	hcloud server delete inari

open := hcloud firewall    add-rule inari-firewall --direction in --protocol tcp
shut := hcloud firewall delete-rule inari-firewall --direction in --protocol tcp
src_pub := --source-ips 0.0.0.0/0 --source-ips ::/0
src_pvt := --source-ips $$(curl --silent https://api.ipify.org)/32

open-ssh-pub:
	 $(open) $(src_pub) --port 22 --description SSH
open-http-pub:
	 $(open) $(src_pub) --port 80 --description HTTP
open-https-pub:
	 $(open) $(src_pub) --port 443 --description HTTPS

shut-ssh-pub:
	 $(shut) $(src_pub) --port 22 --description SSH
shut-http-pub:
	 $(shut) $(src_pub) --port 80 --description HTTP
shut-https-pub:
	 $(shut) $(src_pub) --port 443 --description HTTPS

open-ssh-pvt:
	 $(open) $(src_pvt) --port 22 --description SSH
open-http-pvt:
	 $(open) $(src_pvt) --port 80 --description HTTP
open-https-pvt:
	 $(open) $(src_pvt) --port 443 --description HTTPS

shut-ssh-pvt:
	 $(shut) $(src_pvt) --port 22 --description SSH
shut-http-pvt:
	 $(shut) $(src_pvt) --port 80 --description HTTP
shut-https-pvt:
	 $(shut) $(src_pvt) --port 443 --description HTTPS

